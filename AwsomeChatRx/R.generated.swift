//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import RswiftResources
import UIKit

private class BundleFinder {}
let R = _R(bundle: Bundle(for: BundleFinder.self))

struct _R {
  let bundle: Foundation.Bundle
  var color: color { .init(bundle: bundle) }
  var image: image { .init(bundle: bundle) }
  var file: file { .init(bundle: bundle) }
  var nib: nib { .init(bundle: bundle) }
  var storyboard: storyboard { .init(bundle: bundle) }

  func color(bundle: Foundation.Bundle) -> color {
    .init(bundle: bundle)
  }
  func image(bundle: Foundation.Bundle) -> image {
    .init(bundle: bundle)
  }
  func file(bundle: Foundation.Bundle) -> file {
    .init(bundle: bundle)
  }
  func nib(bundle: Foundation.Bundle) -> nib {
    .init(bundle: bundle)
  }
  func storyboard(bundle: Foundation.Bundle) -> storyboard {
    .init(bundle: bundle)
  }
  func validate() throws {
    try self.nib.validate()
    try self.storyboard.validate()
  }

  struct project {
    let developmentRegion = "en"
  }

  /// This `_R.color` struct is generated, and contains static references to 6 colors.
  struct color {
    let bundle: Foundation.Bundle

    /// Color `AccentColor`.
    var accentColor: RswiftResources.ColorResource { .init(name: "AccentColor", path: [], bundle: bundle) }

    /// Color `grayBackgroundColor`.
    var grayBackgroundColor: RswiftResources.ColorResource { .init(name: "grayBackgroundColor", path: [], bundle: bundle) }

    /// Color `mainColor`.
    var mainColor: RswiftResources.ColorResource { .init(name: "mainColor", path: [], bundle: bundle) }

    /// Color `mainCyanColor`.
    var mainCyanColor: RswiftResources.ColorResource { .init(name: "mainCyanColor", path: [], bundle: bundle) }

    /// Color `mainRedColor`.
    var mainRedColor: RswiftResources.ColorResource { .init(name: "mainRedColor", path: [], bundle: bundle) }

    /// Color `mainYellowColor`.
    var mainYellowColor: RswiftResources.ColorResource { .init(name: "mainYellowColor", path: [], bundle: bundle) }
  }

  /// This `_R.image` struct is generated, and contains static references to 12 images.
  struct image {
    let bundle: Foundation.Bundle

    /// Image `icon_add_new_friend`.
    var icon_add_new_friend: RswiftResources.ImageResource { .init(name: "icon_add_new_friend", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_create_message`.
    var icon_create_message: RswiftResources.ImageResource { .init(name: "icon_create_message", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_email`.
    var icon_email: RswiftResources.ImageResource { .init(name: "icon_email", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_friends_tabbar_deselected`.
    var icon_friends_tabbar_deselected: RswiftResources.ImageResource { .init(name: "icon_friends_tabbar_deselected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_friends_tabbar_selected`.
    var icon_friends_tabbar_selected: RswiftResources.ImageResource { .init(name: "icon_friends_tabbar_selected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_key_password`.
    var icon_key_password: RswiftResources.ImageResource { .init(name: "icon_key_password", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_message_tabbar_deselected`.
    var icon_message_tabbar_deselected: RswiftResources.ImageResource { .init(name: "icon_message_tabbar_deselected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_profile_tabbar_deselected`.
    var icon_profile_tabbar_deselected: RswiftResources.ImageResource { .init(name: "icon_profile_tabbar_deselected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_profile_tabbar_selected`.
    var icon_profile_tabbar_selected: RswiftResources.ImageResource { .init(name: "icon_profile_tabbar_selected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_search_field`.
    var icon_search_field: RswiftResources.ImageResource { .init(name: "icon_search_field", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_user_field_input`.
    var icon_user_field_input: RswiftResources.ImageResource { .init(name: "icon_user_field_input", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `img_search_result_not_found`.
    var img_search_result_not_found: RswiftResources.ImageResource { .init(name: "img_search_result_not_found", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }
  }

  /// This `_R.file` struct is generated, and contains static references to 1 resource files.
  struct file {
    let bundle: Foundation.Bundle

    /// Resource file `GoogleService-Info.plist`.
    var googleServiceInfoPlist: RswiftResources.FileResource { .init(name: "GoogleService-Info", pathExtension: "plist", bundle: bundle, locale: LocaleReference.none) }
  }

  /// This `_R.nib` struct is generated, and contains static references to 1 nibs.
  struct nib {
    let bundle: Foundation.Bundle

    /// Nib `HomeViewController`.
    var homeViewController: RswiftResources.NibReference<UIKit.UIView> { .init(name: "HomeViewController", bundle: bundle) }

    func validate() throws {

    }
  }

  /// This `_R.storyboard` struct is generated, and contains static references to 1 storyboards.
  struct storyboard {
    let bundle: Foundation.Bundle
    var launchScreen: launchScreen { .init(bundle: bundle) }

    func launchScreen(bundle: Foundation.Bundle) -> launchScreen {
      .init(bundle: bundle)
    }
    func validate() throws {
      try self.launchScreen.validate()
    }


    /// Storyboard `LaunchScreen`.
    struct launchScreen: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = UIKit.UIViewController

      let bundle: Foundation.Bundle

      let name = "LaunchScreen"
      func validate() throws {

      }
    }
  }
}